Comparable:
	1.This is belongs to java.lang package.
	2.Comparable interface is used within the class ie. inside the class.
	3.This interface contains only one method.
	
	public int compareTo(Object obj);
	
	4.comparable interface method have only one parameter.
	
	Example:
	
		Inside Student Class:
		
		import java.util.Objects;

public class Student implements Comparable{
	private int roll;
	private String name;
	private String address;
	private int marks;
	
	
	public Student() {
		super();
	}
	
	public Student(int roll, String name, String address, int marks) {
		super();
		this.roll = roll;
		this.name = name;
		this.address = address;
		this.marks = marks;
	}
	
	
	public int getRoll() {
		return roll;
	}
	public void setRoll(int roll) {
		this.roll = roll;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public String getAddress() {
		return address;
	}
	public void setAddress(String address) {
		this.address = address;
	}
	public int getMarks() {
		return marks;
	}
	public void setMarks(int marks) {
		this.marks = marks;
	}
	
		@Override
	public int compareTo(Student s2) {
		
		return this.getMarks() > s2.getMarks() ? +1 : -1;
		
		
		
		
	}
	
	
	
	@Override
	public int hashCode() {
		return Objects.hash(address, marks, name, roll);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Student other = (Student) obj;
		return Objects.equals(address, other.address) && marks == other.marks && Objects.equals(name, other.name)
				&& roll == other.roll;
	}

	@Override
	public String toString() {
		return "Student [roll=" + roll + ", name=" + name + ", address=" + address + ", marks=" + marks + "]";
	}
	
	
}


Comparator:
	1.this interface belongs to java.util package.
	2.this Comparator interface also has only one method:

		public int compare(Object obj1,Object obj2);

	3.using this comparator we can define the sorting logic of a class objects outside that class.

	4.using Comparator we can define multiple sorting logic also.
	
	Example:
	
	import java.util.Comparator;

public class StudentMarkComp implements Comparator<Student>{

	@Override
	public int compare(Student s1, Student s2) {
		if(s1.getMarks()>s2.getMarks()) {
			return +1;
		}else if(s1.getMarks()<s2.getMarks()) {
			return -1;
		}else {
			return s1.getName().compareTo(s2.getName());
		}
	
	}

}
	









		 